// <auto-generated />
using System;
using BlogApp.Data.Concrete.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogApp.Data.Migrations
{
    [DbContext(typeof(MyAppContext))]
    [Migration("20230110224050_FirstMigrationss")]
    partial class FirstMigrationss
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("BlogApp.Entity.Blog", b =>
                {
                    b.Property<int>("BlogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BlogContent")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogName")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlogTitle")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.HasKey("BlogID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Blog");

                    b.HasData(
                        new
                        {
                            BlogID = 1,
                            BlogContent = " lorem ipsum dolor.",
                            BlogImage = "1",
                            BlogName = "Jazz instruments",
                            BlogTitle = "Music History",
                            CategoryID = 3,
                            DateAdded = new DateTime(2023, 1, 11, 1, 40, 50, 407, DateTimeKind.Local).AddTicks(981),
                            IsDeleted = false
                        },
                        new
                        {
                            BlogID = 2,
                            BlogContent = " lorem ipsum dolor.",
                            BlogImage = "2",
                            BlogName = "Fps Games",
                            BlogTitle = "Game History",
                            CategoryID = 1,
                            DateAdded = new DateTime(2023, 1, 11, 1, 40, 50, 407, DateTimeKind.Local).AddTicks(990),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("BlogApp.Entity.BlogCategory", b =>
                {
                    b.Property<int>("BlogID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BlogID", "CategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("BlogCategories");

                    b.HasData(
                        new
                        {
                            BlogID = 1,
                            CategoryID = 1
                        },
                        new
                        {
                            BlogID = 2,
                            CategoryID = 2
                        });
                });

            modelBuilder.Entity("BlogApp.Entity.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Music",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Game",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Books",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Food",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Sport",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("BlogApp.Entity.Blog", b =>
                {
                    b.HasOne("BlogApp.Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlogApp.Entity.BlogCategory", b =>
                {
                    b.HasOne("BlogApp.Entity.Blog", "Blog")
                        .WithMany("BlogCategories")
                        .HasForeignKey("BlogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogApp.Entity.Category", "Category")
                        .WithMany("BlogCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlogApp.Entity.Blog", b =>
                {
                    b.Navigation("BlogCategories");
                });

            modelBuilder.Entity("BlogApp.Entity.Category", b =>
                {
                    b.Navigation("BlogCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
